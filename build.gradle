plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '2.7.16'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id "org.sonarqube" version "4.0.0.2929"
}

group = 'com.inclusioncloud'
version = '1.0.0'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

sonarqube {
	properties {
		property "sonar.projectName", "operator-api"
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.token", "sqa_54cc4880c515c3e7c19174df578762ec5c2b390a"
	}
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"**/*Application.class",
					"**/config/*",
					"**/constants/*",
					"**/controller/*",
					"**/dto/*",
					"**/exception/*"
			])
		}))
	}
}

jacoco {
	toolVersion = "0.8.7"
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			element = 'CLASS'
			excludes = [
					'**.*Application*',
					'**.config.*',
					'**.constants.*',
					'**.controller.*',
					'**.dto.*',
					'**.exception.*'
			]
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.80
			}
		}
	}
}

check.dependsOn jacocoTestCoverageVerification

afterEvaluate {
	sonarqube {
		properties {
			properties["sonar.jacoco.reportPath"] = "${buildDir}/jacoco/test.exec"
			properties["sonar.coverage.exclusions"] =
					"**/*Application*," +
					"**/config/*," +
					"**/constants/*," +
					"**/controller/*," +
					"**/dto/*," +
					"**/exception/*"

		}
	}
}